  ! ADD IN <head> this ==>> <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/all.js"></script>
  ~ using an <i> element to reference the icon 
  ~ using a <span> element to reference the icon 
<div>
  <span class="fas fa-camera"></span> 
  <i class="fas fa-camera"></i> 
  <i class="fa fa-spinner fa-spin"></i>
  <i class="fa fa-o-notch fa-spin"></i>
  <i class="fa fa-refresh fa-spin"></i>
  <i class="fa fa-cog fa-spin"></i>
  <i class="fa fa-spinner fa-pulse"></i>
</div>

##################################################################################################################

/******  JavaScript ******/
// .then( data => {
//   // console.log( "========= получаем город по IP =========" );// console.log(data);    
//   // let lat = data.geoplugin_latitude // let lon = data.geoplugin_longitude // const requestUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly&units=metric&lang=ru&appid=${apiKey}`;
//   // console.log(data.geoplugin_city, '$ 1 = ' + data.geoplugin_currencySymbol, data.geoplugin_currencyConverter.toFixed(2));    
//   return data
// })

##################################################################################################################
// ? get city of Ukraine

let countries = fetch('https://countriesnow.space/api/v0.1/countries')
countries
  .then(data => data.json())
  .then(data => { 
    let arr = data.filter(e => {
      return e.country == 'Ukraine'
    });
    return arr[0].cities 
  })
  .then(data => { 
    console.log(data); 
    let select = document.createElement('select')
    select.classList.add('change-location')
    select.size = "10"

    data.forEach(e => {
      let option = document.createElement('option')
      option.innerText = e
      select.appendChild(option)
    })
    console.log(select);
    document.querySelector('.aside__footer').insertAdjacentElement('beforeend', select)
    return data 
  })

##################################################################################################################
//  ? forcast 8 day's
    const requestUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=50.5434&lon=30.212&exclude=current,minutely,hourly&units=metric&lang=ru&appid=ac4d8af28a8c864ae7422cba18ba1e76`;

//  ? имитация события
    document.querySelector('#city').dispatchEvent(new Event('change'));

##################################################################################################################
let options = new Date().toLocaleDateString("ru-RU", {
  weekday:"narrow",// "short" и "long".
  era:"narrow",// "short" и "long".
  year:"numeric",// и "2-digit".
  month:"numeric",// "2-digit", "narrow", "short" и "long".
  day:"numeric",// и "2-digit".
  hour:"numeric",// и "2-digit".
  minute:"numeric",// и "2-digit".
  second:"numeric",// и "2-digit".
  timeZoneName:"short"// и "long".
})

##################################################################################################################
// GET city, latitude, longitude from IP 

const responseLonLatCity = async () => {
  const requestIpTest = await fetch(URL[0], requestOptions)// "//www.geoplugin.net/json.gp",
  const response = await requestIpTest.json()
  const valObj = {
    city: response.geoplugin_city,
    lat: response.geoplugin_latitude,
    lon: response.geoplugin_longitude
  }
  return valObj
}

##################################################################################################################
// определяем браузер юзера
function get_name_browser(){
  // получаем данные userAgent
  const ua = navigator.userAgent;    
  // с помощью регулярок проверяем наличие текста,
  // соответствующие тому или иному браузеру
  if (ua.search(/Chrome/) > 0) { 
    console.log('Google Chrome');
    return 'Google Chrome'
  };
  if (ua.search(/Firefox/) > 0) {
    console.log('Firefox');
    return 'Firefox'
  };
  if (ua.search(/Opera/) > 0) {
    console.log('Opera');
    return 'Opera'
  };
  if (ua.search(/Safari/) > 0) {
    console.log('Safari');
    return 'Safari'
  };
  if (ua.search(/MSIE/) > 0) {
    console.log('Internet Explorer');
    return 'Internet Explorer'
  };
  // условий может быть и больше.
  // сейчас сделаны проверки только 
  // для популярных браузеров
  return 'Не определен';
}
get_name_browser();
// пример использования
// const browser = get_name_browser();
// console.log(browser)

/******  SCSS ******/
